<?php
require_once("globals.inc");
require_once("util.inc");
require_once("functions.inc");
require_once("pkg-utils.inc");


function telegraf_resync_config() {
	global $config;

	if (!is_array($config['installedpackages']['telegraf'])) {
		return;
	}
	if (!is_array($config['installedpackages']['telegraf']['config'])) {
		return;
	}

	$telegraf_conf = &$config['installedpackages']['telegraf']['config'][0];
	conf_mount_rw();

	/* disable telegraf if not enabled */
	if (empty($telegraf_conf['enable'])) {
		if (is_service_running("telegraf")) {
			stop_service("telegraf");
		}
		unlink_if_exists("/usr/local/etc/rc.d/telegraf.sh");
		unlink_if_exists("/usr/local/etc/telegraf.conf");
		return;
	}

	/* generate telegraf.conf */
	$cfg  = "# This file is automatically generated by pfSense #\n\n";
	$cfg .= "[agent]\n";
	$cfg .= "\tinterval = \"10s\"\n";
	$cfg .= "\tround_interval = true\n\n";
	$cfg .= "[[inputs.cpu]]\n";
	$cfg .= "\tpercpu = true\n";
	$cfg .= "\ttotalcpu = true\n";
	$cfg .= "\tfielddrop = [\"time_*\"]\n\n";
	$cfg .= "[[inputs.disk]]\n";
	$cfg .= "\tignore_fs = [\"tmpfs\", \"devtmpfs\"]\n\n";
	$cfg .= "[[inputs.diskio]]\n\n";
	$cfg .= "[[inputs.kernel]]\n\n";
	$cfg .= "[[inputs.mem]]\n\n";
	$cfg .= "[[inputs.net]]\n\n";
	$cfg .= "[[inputs.processes]]\n\n";
	$cfg .= "[[inputs.swap]]\n\n";
	$cfg .= "[[inputs.system]]\n\n";
	$cfg .= "[[outputs.influxdb]]\n";
	$cfg .= "\turls = [\"" . $telegraf_conf['influx_server'] . "\"]\n";
	$cfg .= "\tdatabase = \"" . $telegraf_conf['influx_db'] . "\"\n";
	if (!empty($telegraf_conf['influx_user'])) {
		$cfg .= "\tusername = \"" . $telegraf_conf['influx_user'] . "\"\n";
	}
	if (!empty($telegraf_conf['influx_pass'])) {
		$cfg .= "\tpassword = \"" . $telegraf_conf['influx_pass'] . "\"\n";
	}
	file_put_contents("/usr/local/etc/telegraf.conf", $cfg);

	/* generate telegraf.sh rcfile */
	write_rcfile(array(
		"file" => "telegraf.sh",
		"start" => "/usr/sbin/daemon -crP /var/run/telegraf.pid /usr/local/bin/telegraf -config=/usr/local/etc/telegraf.conf 2>> /var/log/telegraf.log",
		"stop" => "/bin/kill `cat /var/run/telegraf.pid`"
		)
	);

	/* (re)start service */
	if (is_service_running("telegraf")) {
		restart_service("telegraf");
	} else {
		start_service("telegraf");
	}

	sleep(1);
	conf_mount_ro();
}
?>
